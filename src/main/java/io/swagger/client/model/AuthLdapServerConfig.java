/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AuthLdapMapping;
import io.swagger.client.model.AuthLdapMemberOfMapping;
import io.swagger.client.model.AuthLdapSearchFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AuthLdapServerConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-25T15:42:51.155Z")
public class AuthLdapServerConfig {
  @SerializedName("ConfigId")
  private String configId = null;

  @SerializedName("DomainName")
  private String domainName = null;

  @SerializedName("Host")
  private String host = null;

  @SerializedName("Connection")
  private String connection = null;

  @SerializedName("BindDN")
  private String bindDN = null;

  @SerializedName("BindPW")
  private String bindPW = null;

  @SerializedName("SkipVerifyCertificate")
  private Boolean skipVerifyCertificate = null;

  @SerializedName("RootCA")
  private String rootCA = null;

  @SerializedName("RootCAData")
  private String rootCAData = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("User")
  private AuthLdapSearchFilter user = null;

  @SerializedName("MappingRules")
  private List<AuthLdapMapping> mappingRules = null;

  @SerializedName("MemberOfMapping")
  private AuthLdapMemberOfMapping memberOfMapping = null;

  @SerializedName("RolePrefix")
  private String rolePrefix = null;

  @SerializedName("Schedule")
  private String schedule = null;

  @SerializedName("SchedulerDetails")
  private String schedulerDetails = null;

  public AuthLdapServerConfig configId(String configId) {
    this.configId = configId;
    return this;
  }

   /**
   * Get configId
   * @return configId
  **/
  @ApiModelProperty(value = "")
  public String getConfigId() {
    return configId;
  }

  public void setConfigId(String configId) {
    this.configId = configId;
  }

  public AuthLdapServerConfig domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

   /**
   * Get domainName
   * @return domainName
  **/
  @ApiModelProperty(value = "")
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }

  public AuthLdapServerConfig host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @ApiModelProperty(value = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public AuthLdapServerConfig connection(String connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @ApiModelProperty(value = "")
  public String getConnection() {
    return connection;
  }

  public void setConnection(String connection) {
    this.connection = connection;
  }

  public AuthLdapServerConfig bindDN(String bindDN) {
    this.bindDN = bindDN;
    return this;
  }

   /**
   * Get bindDN
   * @return bindDN
  **/
  @ApiModelProperty(value = "")
  public String getBindDN() {
    return bindDN;
  }

  public void setBindDN(String bindDN) {
    this.bindDN = bindDN;
  }

  public AuthLdapServerConfig bindPW(String bindPW) {
    this.bindPW = bindPW;
    return this;
  }

   /**
   * Get bindPW
   * @return bindPW
  **/
  @ApiModelProperty(value = "")
  public String getBindPW() {
    return bindPW;
  }

  public void setBindPW(String bindPW) {
    this.bindPW = bindPW;
  }

  public AuthLdapServerConfig skipVerifyCertificate(Boolean skipVerifyCertificate) {
    this.skipVerifyCertificate = skipVerifyCertificate;
    return this;
  }

   /**
   * Get skipVerifyCertificate
   * @return skipVerifyCertificate
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipVerifyCertificate() {
    return skipVerifyCertificate;
  }

  public void setSkipVerifyCertificate(Boolean skipVerifyCertificate) {
    this.skipVerifyCertificate = skipVerifyCertificate;
  }

  public AuthLdapServerConfig rootCA(String rootCA) {
    this.rootCA = rootCA;
    return this;
  }

   /**
   * Get rootCA
   * @return rootCA
  **/
  @ApiModelProperty(value = "")
  public String getRootCA() {
    return rootCA;
  }

  public void setRootCA(String rootCA) {
    this.rootCA = rootCA;
  }

  public AuthLdapServerConfig rootCAData(String rootCAData) {
    this.rootCAData = rootCAData;
    return this;
  }

   /**
   * Get rootCAData
   * @return rootCAData
  **/
  @ApiModelProperty(value = "")
  public String getRootCAData() {
    return rootCAData;
  }

  public void setRootCAData(String rootCAData) {
    this.rootCAData = rootCAData;
  }

  public AuthLdapServerConfig pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @ApiModelProperty(value = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public AuthLdapServerConfig user(AuthLdapSearchFilter user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public AuthLdapSearchFilter getUser() {
    return user;
  }

  public void setUser(AuthLdapSearchFilter user) {
    this.user = user;
  }

  public AuthLdapServerConfig mappingRules(List<AuthLdapMapping> mappingRules) {
    this.mappingRules = mappingRules;
    return this;
  }

  public AuthLdapServerConfig addMappingRulesItem(AuthLdapMapping mappingRulesItem) {
    if (this.mappingRules == null) {
      this.mappingRules = new ArrayList<AuthLdapMapping>();
    }
    this.mappingRules.add(mappingRulesItem);
    return this;
  }

   /**
   * Get mappingRules
   * @return mappingRules
  **/
  @ApiModelProperty(value = "")
  public List<AuthLdapMapping> getMappingRules() {
    return mappingRules;
  }

  public void setMappingRules(List<AuthLdapMapping> mappingRules) {
    this.mappingRules = mappingRules;
  }

  public AuthLdapServerConfig memberOfMapping(AuthLdapMemberOfMapping memberOfMapping) {
    this.memberOfMapping = memberOfMapping;
    return this;
  }

   /**
   * Get memberOfMapping
   * @return memberOfMapping
  **/
  @ApiModelProperty(value = "")
  public AuthLdapMemberOfMapping getMemberOfMapping() {
    return memberOfMapping;
  }

  public void setMemberOfMapping(AuthLdapMemberOfMapping memberOfMapping) {
    this.memberOfMapping = memberOfMapping;
  }

  public AuthLdapServerConfig rolePrefix(String rolePrefix) {
    this.rolePrefix = rolePrefix;
    return this;
  }

   /**
   * Get rolePrefix
   * @return rolePrefix
  **/
  @ApiModelProperty(value = "")
  public String getRolePrefix() {
    return rolePrefix;
  }

  public void setRolePrefix(String rolePrefix) {
    this.rolePrefix = rolePrefix;
  }

  public AuthLdapServerConfig schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(value = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public AuthLdapServerConfig schedulerDetails(String schedulerDetails) {
    this.schedulerDetails = schedulerDetails;
    return this;
  }

   /**
   * Get schedulerDetails
   * @return schedulerDetails
  **/
  @ApiModelProperty(value = "")
  public String getSchedulerDetails() {
    return schedulerDetails;
  }

  public void setSchedulerDetails(String schedulerDetails) {
    this.schedulerDetails = schedulerDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthLdapServerConfig authLdapServerConfig = (AuthLdapServerConfig) o;
    return Objects.equals(this.configId, authLdapServerConfig.configId) &&
        Objects.equals(this.domainName, authLdapServerConfig.domainName) &&
        Objects.equals(this.host, authLdapServerConfig.host) &&
        Objects.equals(this.connection, authLdapServerConfig.connection) &&
        Objects.equals(this.bindDN, authLdapServerConfig.bindDN) &&
        Objects.equals(this.bindPW, authLdapServerConfig.bindPW) &&
        Objects.equals(this.skipVerifyCertificate, authLdapServerConfig.skipVerifyCertificate) &&
        Objects.equals(this.rootCA, authLdapServerConfig.rootCA) &&
        Objects.equals(this.rootCAData, authLdapServerConfig.rootCAData) &&
        Objects.equals(this.pageSize, authLdapServerConfig.pageSize) &&
        Objects.equals(this.user, authLdapServerConfig.user) &&
        Objects.equals(this.mappingRules, authLdapServerConfig.mappingRules) &&
        Objects.equals(this.memberOfMapping, authLdapServerConfig.memberOfMapping) &&
        Objects.equals(this.rolePrefix, authLdapServerConfig.rolePrefix) &&
        Objects.equals(this.schedule, authLdapServerConfig.schedule) &&
        Objects.equals(this.schedulerDetails, authLdapServerConfig.schedulerDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configId, domainName, host, connection, bindDN, bindPW, skipVerifyCertificate, rootCA, rootCAData, pageSize, user, mappingRules, memberOfMapping, rolePrefix, schedule, schedulerDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthLdapServerConfig {\n");
    
    sb.append("    configId: ").append(toIndentedString(configId)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    bindDN: ").append(toIndentedString(bindDN)).append("\n");
    sb.append("    bindPW: ").append(toIndentedString(bindPW)).append("\n");
    sb.append("    skipVerifyCertificate: ").append(toIndentedString(skipVerifyCertificate)).append("\n");
    sb.append("    rootCA: ").append(toIndentedString(rootCA)).append("\n");
    sb.append("    rootCAData: ").append(toIndentedString(rootCAData)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    mappingRules: ").append(toIndentedString(mappingRules)).append("\n");
    sb.append("    memberOfMapping: ").append(toIndentedString(memberOfMapping)).append("\n");
    sb.append("    rolePrefix: ").append(toIndentedString(rolePrefix)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    schedulerDetails: ").append(toIndentedString(schedulerDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

