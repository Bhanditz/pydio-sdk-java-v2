/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AuthLdapSearchFilter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-25T15:42:51.155Z")
public class AuthLdapSearchFilter {
  @SerializedName("DNs")
  private List<String> dns = null;

  @SerializedName("Filter")
  private String filter = null;

  @SerializedName("IDAttribute")
  private String idAttribute = null;

  @SerializedName("DisplayAttribute")
  private String displayAttribute = null;

  @SerializedName("Scope")
  private String scope = null;

  public AuthLdapSearchFilter dns(List<String> dns) {
    this.dns = dns;
    return this;
  }

  public AuthLdapSearchFilter addDnsItem(String dnsItem) {
    if (this.dns == null) {
      this.dns = new ArrayList<String>();
    }
    this.dns.add(dnsItem);
    return this;
  }

   /**
   * Get dns
   * @return dns
  **/
  @ApiModelProperty(value = "")
  public List<String> getDns() {
    return dns;
  }

  public void setDns(List<String> dns) {
    this.dns = dns;
  }

  public AuthLdapSearchFilter filter(String filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @ApiModelProperty(value = "")
  public String getFilter() {
    return filter;
  }

  public void setFilter(String filter) {
    this.filter = filter;
  }

  public AuthLdapSearchFilter idAttribute(String idAttribute) {
    this.idAttribute = idAttribute;
    return this;
  }

   /**
   * Get idAttribute
   * @return idAttribute
  **/
  @ApiModelProperty(value = "")
  public String getIdAttribute() {
    return idAttribute;
  }

  public void setIdAttribute(String idAttribute) {
    this.idAttribute = idAttribute;
  }

  public AuthLdapSearchFilter displayAttribute(String displayAttribute) {
    this.displayAttribute = displayAttribute;
    return this;
  }

   /**
   * Get displayAttribute
   * @return displayAttribute
  **/
  @ApiModelProperty(value = "")
  public String getDisplayAttribute() {
    return displayAttribute;
  }

  public void setDisplayAttribute(String displayAttribute) {
    this.displayAttribute = displayAttribute;
  }

  public AuthLdapSearchFilter scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthLdapSearchFilter authLdapSearchFilter = (AuthLdapSearchFilter) o;
    return Objects.equals(this.dns, authLdapSearchFilter.dns) &&
        Objects.equals(this.filter, authLdapSearchFilter.filter) &&
        Objects.equals(this.idAttribute, authLdapSearchFilter.idAttribute) &&
        Objects.equals(this.displayAttribute, authLdapSearchFilter.displayAttribute) &&
        Objects.equals(this.scope, authLdapSearchFilter.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dns, filter, idAttribute, displayAttribute, scope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthLdapSearchFilter {\n");
    
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    idAttribute: ").append(toIndentedString(idAttribute)).append("\n");
    sb.append("    displayAttribute: ").append(toIndentedString(displayAttribute)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

