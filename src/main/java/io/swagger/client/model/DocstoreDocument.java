/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DocstoreDocumentType;
import java.io.IOException;

/**
 * DocstoreDocument
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-25T15:42:51.155Z")
public class DocstoreDocument {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Type")
  private DocstoreDocumentType type = null;

  @SerializedName("Owner")
  private String owner = null;

  @SerializedName("Data")
  private String data = null;

  @SerializedName("IndexableMeta")
  private String indexableMeta = null;

  public DocstoreDocument ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DocstoreDocument type(DocstoreDocumentType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public DocstoreDocumentType getType() {
    return type;
  }

  public void setType(DocstoreDocumentType type) {
    this.type = type;
  }

  public DocstoreDocument owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public DocstoreDocument data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public DocstoreDocument indexableMeta(String indexableMeta) {
    this.indexableMeta = indexableMeta;
    return this;
  }

   /**
   * Get indexableMeta
   * @return indexableMeta
  **/
  @ApiModelProperty(value = "")
  public String getIndexableMeta() {
    return indexableMeta;
  }

  public void setIndexableMeta(String indexableMeta) {
    this.indexableMeta = indexableMeta;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocstoreDocument docstoreDocument = (DocstoreDocument) o;
    return Objects.equals(this.ID, docstoreDocument.ID) &&
        Objects.equals(this.type, docstoreDocument.type) &&
        Objects.equals(this.owner, docstoreDocument.owner) &&
        Objects.equals(this.data, docstoreDocument.data) &&
        Objects.equals(this.indexableMeta, docstoreDocument.indexableMeta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, type, owner, data, indexableMeta);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocstoreDocument {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    indexableMeta: ").append(toIndentedString(indexableMeta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

